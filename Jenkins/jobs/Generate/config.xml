<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1268.v6eb_e2ee1a_85a">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>repository</name>
          <description>Configure your repository pipelines</description>
          <defaultValue>https://github.com/tomoNakami/continuous-integration.git</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3618.v13db_a_21f0fcf">
    <script>// imports
import hudson.plugins.git.*;
import jenkins.model.Jenkins
import hudson.model.ListView
import groovy.json.JsonSlurper
import org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition

properties([
    parameters([
        string(defaultValue: &apos;https://github.com/tomoNakami/continuous-integration.git&apos;, description: &apos;Configure your repository pipelines&apos;, name: &apos;repository&apos;)
    ])
])

parent = Jenkins.instance
// def sharedLibrariesUrl = &quot;https://github.com/tomoNakami/continuous-integration.git&quot;

scm = new GitSCM(params.repository)
scm.userRemoteConfigs = scm.createRepoList(params.repository, null)
scm.branches = [new BranchSpec(&quot;*/main&quot;)];

def projectNames = [
    &quot;Artifact&quot;,
    &quot;Build-And-Test&quot;,
    &quot;Clone&quot;,
    &quot;Commit&quot;,
    &quot;Cron&quot;,
    &quot;Deployment&quot;,
    &quot;Full-Pipeline&quot;,
    &quot;Junit-Test&quot;,
    &quot;Monitoring-Phone&quot;,
    &quot;Monitoring-WhatsApp&quot;,
    &quot;Parallelism&quot;,
    &quot;VCS-Any-Agent&quot;,
    &quot;VCS-Docker-Agent&quot;,
    &quot;Webhook&quot;
]

for (projectName in projectNames) {
    flowDefinition = new org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinition(scm, &quot;Jenkins/pipelines/${projectName}.groovy&quot;)
    myJob = hudson.model.Hudson.instance.getJob(projectName)
    println(&quot;${projectName} is being created&quot;)
    job = new org.jenkinsci.plugins.workflow.job.WorkflowJob(parent, projectName)

    if (projectName in [&quot;Full-Pipeline&quot;, &quot;Monitoring-Phone&quot;, &quot;Monitoring-WhatsApp&quot;]) {
        job.definition = new CpsFlowDefinition(
          &quot;&quot;&quot;
node {
      git branch: &apos;main&apos;, url: &apos;${params.repository}&apos;
      load &apos;./Jenkins/pipelines/${projectName}.groovy&apos;
}
          &quot;&quot;&quot;
    )
    } else {
        job.definition = flowDefinition
    }
    parent.reload()
}

</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>